{"version":3,"sources":["utils.js","Circle.js","Hive.js","Input.js","FoundList.js","SpellingCee.js","App.js","serviceWorker.js","index.js"],"names":["getWords","letters","dictionary","letterSet","Set","split","filter","word","hasFirstLetter","indexOf","hasBadLetter","i","length","has","wordContainsAll","toLowerCase","every","letter","scoreWords","words","reduce","accumulator","points","shuffleArray","array","j","Math","floor","random","shuffleAll","Array","from","join","getPuzzle","letterSetCounts","forEach","add","getUniqueLetters","size","sort","hasOwnProperty","puzzles","Object","keys","wordCount","puzzle","count","Circle","props","id","className","position","onClick","letterClick","Hive","Input","useState","onKeyPress","FoundList","open","setOpen","foundList","map","key","bigFoundList","concat","caret","modalStyle","content","top","left","right","bottom","marginRight","fontSize","transform","SpellingCee","newPuzzle","window","location","href","protocol","host","toggleAnswers","setState","showAnswers","state","backspace","currWord","slice","onWordSubmit","wordSet","foundWords","message","includes","unshift","localStorage","setItem","JSON","stringify","displayMessage","duration","console","log","showMessage","setTimeout","uncasedLetter","validLetter","reorder","newWord","displayLetters","substring","openModal","event","showModal","stopPropagation","preventDefault","openFAQ","showFAQ","closeModals","pathname","maxScore","parse","getItem","ratingLevels","ceil","getRatingLevels","document","addEventListener","this","_handleDocumentClick","messageClass","userScore","answerList","missing","showLabel","wordLabel","pointLabel","level","percent","getRating","ariaHideApp","isOpen","style","queenBee","genius","amazing","great","nice","solid","good","movingUp","goodStart","toUpperCase","rel","target","React","Component","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c059efe8.chunk.js","sourcesContent":["function getWords (letters, dictionary)  {\n  //console.log(\"In getWords, got these letters\")\n  //console.log(letters);\n  const letterSet = new Set(letters.split(''))\n  const words = dictionary.filter(word => {\n    const hasFirstLetter = word.indexOf(letters[0]) > -1;\n    var hasBadLetter = false;\n    for (var i = 0; i < word.length; i++) {      \n      if (letterSet.has(word[i]) === false)  {\n        hasBadLetter = true;\n        break;\n      }\n    }\n    \n    return hasFirstLetter && !hasBadLetter;\n  });\n\n  return words;\n}\n\nfunction wordContainsAll(word, letters) {\n  return letters.toLowerCase().split('').every(function(letter) {\n      return word.toLowerCase().indexOf(letter) !== -1;\n    });\n}\n\nfunction scoreWords(words, letters) {\n  return words.reduce( (accumulator, word) => {\n    var points = 0\n    if (word.length === 4) {\n      points = 1;\n    } else if (word.length > 4) {\n      points = word.length;\n    }\n    // console.log(`Word is ${word} and accumulated points are ${accumulator + points}`)\n    const bonus = wordContainsAll(word, letters) ? 7 : 0\n    return accumulator + points + bonus; \n  }, 0);\n}\n\nfunction getUniqueLetters(word) {\n  const letterSet = new Set();\n  word.split('').forEach((letter) => {\n    letterSet.add(letter)\n  });\n  return letterSet;\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction shuffleLetters(letters) {\n  const shuffled = letters[0] + shuffleArray(Array.from(letters.substring(1))).join('')\n  return shuffled\n}\n\nfunction shuffleAll(letters) {\n  return shuffleArray(Array.from(letters)).join('')\n}\n\nfunction getPuzzle(dictionary) {\n  const letterSetCounts = {}\n  var letters = null;\n  dictionary.forEach(word => {\n    if (word.indexOf('s') === -1) {\n      const letterSet = getUniqueLetters(word)\n      if (letterSet.size === 7) {\n        letters=Array.from(letterSet).sort().join('')\n        if (!letterSetCounts.hasOwnProperty(letters)) {\n          letterSetCounts[letters] = 0;\n        } \n        letterSetCounts[letters] += 1;\n      }\n    }\n  });\n\n  const puzzles = Object.keys(letterSetCounts).filter(letters => {\n    return letterSetCounts[letters] === 1;\n  });\n\n  var wordCount = 0;\n  var puzzle = null;\n  var count = 0;\n  while ((wordCount < 18 || wordCount > 44) && count < 20) {\n    puzzle = shuffleAll(puzzles[Math.floor(Math.random() * puzzles.length)]);\n    //console.log(`Trying this puzzle: ${puzzle}`)\n    wordCount = getWords(puzzle, dictionary).length\n    //console.log(`has this many words: ${wordCount}`)\n    count += 1;\n  }\n\n  return puzzle\n}\n\nfunction getRatingLevels(maxScore) {\n  return { 'queenBee': maxScore,\n           'genius': Math.ceil(0.7 * maxScore),\n           'amazing': Math.ceil(0.5 * maxScore),\n           'great': Math.ceil(0.4 * maxScore),\n           'nice': Math.ceil(0.25 * maxScore),\n           'solid': Math.ceil(0.15 * maxScore),\n           'good': Math.ceil(0.1 * maxScore),\n           'movingUp': Math.ceil(0.05 * maxScore),\n           'goodStart': Math.ceil(0.02 * maxScore)\n  };\n}\n\nfunction getRating(userScore, maxScore) {\n  const percent = userScore / maxScore;\n  if (percent >= 0.99)\n    return \"Grand Poobah!\"\n  else if (percent >= 0.7)\n    return \"Genius\"\n  else if (percent >= 0.5)\n    return \"Awesome\"\n  else if (percent >= 0.4)\n    return \"Superb\"\n  else if (percent >= 0.25)\n    return \"Nifty\"\n  else if (percent >= 0.15)\n    return \"Satisfactory\"\n  else if (percent >= 0.10)\n    return \"Promising\"\n  else if (percent >= 0.05)\n    return \"Adequate\"\n  else if (percent >= 0.02)\n    return \"Getting there\"\n  else return \"Newbie\"\n}\n  \nexport { getRatingLevels, getRating, getWords, wordContainsAll, scoreWords, getPuzzle, shuffleLetters };\n\n","import React from \"react\";\nimport './Circle.scss';\n\nconst Circle = (props) => { \n\n  return (\n    <div id=\"Circle\" \n       className={props.position}   \n       onClick={() => props.letterClick(props.letter)}>\n      <div className=\"middle\">{props.letter}</div>\n    </div>\n  );\n}\n\nexport default Circle;","import React from \"react\";\nimport './Hive.scss';\nimport Circle from './Circle.js';\n\nconst Hive = (props) => { \n\n  return (\n    <div id=\"Hive\">\n      <div className=\"hex-row\">\n        <Circle letter={props.letters[1]} letterClick={props.letterClick}/>\n        <Circle letter={props.letters[2]} letterClick={props.letterClick}/>\n      </div>\n      <div className=\"hex-row even\">\n        <Circle letter={props.letters[3]} letterClick={props.letterClick}/>\n        <Circle position=\"center\" letter={props.letters[0]} letterClick={props.letterClick}/>\n        <Circle letter={props.letters[4]} letterClick={props.letterClick}/>\n      </div>\n      <div className=\"hex-row\">\n        <Circle letter={props.letters[5]} letterClick={props.letterClick}/>\n        <Circle letter={props.letters[6]} letterClick={props.letterClick}/>\n      </div>\n    </div>\n  );\n}\n\nexport default Hive;","import React, { useState } from \"react\";\nimport './Input.scss';\n\n\nconst Input = (props) => { \n  const [word, setWord] = useState(\"\");\n\n  return (\n    <div id=\"Input\">\n      <div className=\"cursor\" onKeyPress={() => props.onKeyPress}>\n        {/* \n        <input type=\"text\" id=\"lname\" name=\"lname\" value={props.word} onChange={props.onKeyPress}/>\n        */}\n        <span>\n          {props.word}\n        </span>\n        <div className=\"blink\">\n\n        </div>\n        <i></i>\n      </div>\n    </div>\n  );\n}\n\nexport default Input;","import React, { useState } from \"react\";\nimport './FoundList.scss';\n\nconst FoundList = (props) => { \n\n  const [open, setOpen] = useState(props.open || false);\n\n  const foundList = props.words.map((word) =>\n    <li key={word}>{word}</li>\n  );\n\n  const bigFoundList = props.words.concat().sort().map((word) =>\n    <li key={word}>{word}</li>\n  );\n\n  const caret = open ? \"∧\" : \"∨\"\n\n  return (\n    <div id=\"FoundList\">\n      { open ? \n      <div className=\"big-box\">\n        {!props.open &&\n          <div className=\"caret\" onClick={() => setOpen(!open)}>\n            <p>{caret}</p>\n          </div>\n        }\n        <div className=\"big-list\">\n          <ul>\n            <div className=\"wrap\">\n              {bigFoundList}\n            </div>\n          </ul>\n        </div>\n      </div>\n      :\n      <div className=\"box\">\n        <div className=\"list\">\n          <ul>\n          {foundList}\n          </ul>\n        </div>\n        <div className=\"caret\" onClick={() => setOpen(!open)}>\n          <p>{caret}</p>\n        </div>\n      </div>\n      }\n    </div>\n  );\n}\n\nexport default FoundList;","import React from \"react\";\nimport './SpellingCee.scss';\nimport dictionary from './usa.txt.json';\n//import dictionary2 from './english3.txt.json';\n//import dictionary from './enable2k.txt.json';\nimport { getRatingLevels, getRating, wordContainsAll, getWords, scoreWords, getPuzzle, shuffleLetters } from './utils'\nimport Hive from './Hive.js';\nimport Input from './Input.js';\nimport FoundList from './FoundList.js';\nimport Modal from 'react-modal';\n\nconst modalStyle = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-45%',\n    fontSize              : '14px',\n    transform             : 'translate(-50%, -50%)'\n  },\n};\n\nexport default class SpellingCee extends React.Component {\n\n  constructor(props) {\n    super(props);\n    var letters = window.location.pathname.substring(1).toLowerCase();\n    if (letters === \"\") {\n      const puzzle = getPuzzle(dictionary);\n      window.location.href = `${window.location}${puzzle}`\n    }\n\n    const words = getWords(letters, dictionary);\n    const wordSet = new Set(words)\n\n    //const words2 = getWords(letters, dictionary2);\n    const maxScore = scoreWords(words, letters);\n    const foundWords = JSON.parse(localStorage.getItem(`foundWords-${letters}`)) || [];\n    const ratingLevels = getRatingLevels(maxScore);\n    //console.log(\"Got this from storage\")\n    //console.log(foundWords);\n    this.state = {\n      letters: letters,\n      displayLetters: letters,\n      words: words,\n      wordSet: wordSet,\n      foundWords: foundWords,\n      maxScore: maxScore,\n      currWord: \"\",\n      message: \"\",\n      showMessage: false,\n      showAnswers: false,\n      showModal: false,\n      showFAQ: false,\n      ratingLevels: ratingLevels,\n      //words2: words2,\n    };\n  }\n\n  newPuzzle = () => {\n    window.location.href = window.location.protocol + \"//\" + window.location.host\n  }\n\n  toggleAnswers = () => {\n    this.setState({showAnswers: !this.state.showAnswers})\n  }\n\n  backspace = () => {\n    if (this.state.currWord.length > 0)\n      this.setState({currWord: this.state.currWord.slice(0,-1)})\n  }\n\n  onWordSubmit = () => {\n    const { letters, wordSet, foundWords, currWord } = this.state;\n    var message = null;\n    //console.log(\"In onWordSubmit. Curr word is:\")\n    //console.log(this.state.currWord);\n\n    if (currWord.length < 4) {\n      message = \"Word is too short\"\n      this.setState({currWord: \"\"});\n    } else if (currWord.indexOf(letters[0]) === -1) {\n      message = \"Word is missing center letter\"\n      this.setState({currWord: \"\"});\n    } else if (!wordSet.has(currWord)) {\n      message = \"Not in our word list\"\n      this.setState({currWord: \"\"});\n    } else if (foundWords.includes(currWord)) {\n      message = \"Already found that word\"\n      this.setState({currWord: \"\"});\n    } else {\n      foundWords.unshift(currWord);\n      message = wordContainsAll(currWord, letters) ? \"Ooh! Pangram!\" : \"Nice!\"\n      localStorage.setItem(`foundWords-${letters}`, JSON.stringify(foundWords));\n      this.setState({currWord: \"\", foundWords});\n    }\n\n    this.displayMessage(message)\n  };\n\n  displayMessage = (message, duration=3500) => {\n    console.log(\"Gonna display\", message);\n    this.setState({message, showMessage: true})\n    setTimeout(() => {\n      //console.log(\"We timed out!\")\n      this.setState({\n        showMessage: false\n      });\n     }, duration);\n\n  }\n\n  letterClick = (uncasedLetter) => {\n    //console.log(\"Got this letter:\", uncasedLetter)\n    const letter = uncasedLetter.toLowerCase();\n    const validLetter = this.state.letters.indexOf(letter) > -1;\n    if (letter === \" \") {\n      this.reorder()\n    } else if (letter.length === 1 && letter >= \"a\" && letter <= \"z\" && validLetter) {\n      //console.log(\"It's a valid letter\")\n      const newWord = this.state.currWord + letter;\n      this.setState({currWord: newWord})\n      console.log(\"Valid letter?\", validLetter)\n    } else if (letter.length === 1) {\n      this.displayMessage(\"Invalid letter\", 1500)\n    } else if (letter === \"backspace\" && this.state.currWord.length > 0)\n      this.setState({currWord: this.state.currWord.slice(0,-1)})\n    else if (letter === \"enter\")\n      this.onWordSubmit();\n  }\n\n  reorder = () => {\n    this.setState({displayLetters: shuffleLetters(this.state.letters)})\n  }\n\n  openModal = (event) => {\n    this.setState({ showModal: true });\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  \n  openFAQ = (event) => {\n    this.setState({ showFAQ: true });\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  \n  closeModals = () => {\n    this.setState({ showModal: false, showFAQ: false });\n  }\n\n  onKeyPress = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.letterClick(event.key)\n  };\n\n  componentDidMount(){\n    document.addEventListener(\"click\", this._handleDocumentClick, false);\n    document.addEventListener(\"keydown\", this.onKeyPress);\n  }\n\n  render () {\n    const { ratingLevels, showModal, showFAQ, displayLetters, maxScore, message, words, showAnswers, foundWords, currWord, showMessage } = this.state;\n    const messageClass = showMessage ? '' : 'hide';\n    const userScore = scoreWords(foundWords, displayLetters)\n\n    const answerList = words.map((word) => {\n      const missing = foundWords.includes(word) ? '' : 'missing'\n      return(\n        <li className={missing} key={word}>{word}</li>\n      )}\n    );\n\n    const showLabel = showAnswers ? 'Hide Answers' : 'Show Answers'\n    const wordLabel = foundWords.length === 1 ? \"word\" : \"words\"\n    const pointLabel = userScore === 1 ? \"point\" : \"points\"\n    const level = getRating(userScore, maxScore);\n\n    return (\n      <div id=\"SpellingCee\" onKeyPress={this.onKeyPress} onClick={this.closeModals}>\n        <div className=\"header\">\n          <div className=\"button showAnswers\" onClick={this.toggleAnswers}>{showLabel}</div>\n          <h1>\n            Generic Word Game\n          </h1>\n          <div id=\"new-puzzle\" className=\"button new-puzzle\" onClick={this.newPuzzle}>New Puzzle</div>\n\n        </div>\n        <div className=\"main\">\n          <div className=\"mobile\">\n            <FoundList words={foundWords} />\n          </div>\n          <div className=\"message\">\n            <p className={messageClass}>{message}</p>\n          </div>\n\n          <Modal ariaHideApp={false} isOpen={showFAQ} style={modalStyle}>\n            <div className=\"modal\">\n              <ul>\n                <li>\n                  <p className=\"question\">Did this site change?</p>\n                  <p className=\"answer\">Yep! The NY Times sent me a letter that can best be described as cease-and-desisty. So, I've changed the offending bits.</p>\n                </li>\n                <li>\n                  <p className=\"question\">How does this game work?</p>\n                  <p className=\"answer\">The goal is to try to find as many words as possible from the given letters. You can use letters multiple times. Words must be at least 4 letters long and must contain the blue letter in the middle. You'll get 1 point for each 4 letter word, and for longer words you'll get as many points as there are letters in the word. You'll get 7 extra points for using all the letters in a word. That's a pangram, and there's always only one.</p>\n                </li>\n                <li>\n                  <p className=\"question\">Can I load today's NYT puzzle?</p>\n                  <p className=\"answer\">Yeah, just add the letters to the end of the url, starting with the center letter. You can make your own puzzles this way.</p>\n                </li>\n              </ul>\n            </div>\n          </Modal>\n\n          <Modal isOpen={showModal} style={modalStyle}>\n            <div className=\"modal\">\n                <p>Grand Poobah - {ratingLevels.queenBee}</p>\n                <p>Genius - {ratingLevels.genius}</p>\n                <p>Awesome - {ratingLevels.amazing}</p>\n                <p>Superb - {ratingLevels.great}</p>\n                <p>Nifty - {ratingLevels.nice}</p>\n                <p>Satisfactory - {ratingLevels.solid}</p>\n                <p>Promising - {ratingLevels.good}</p>\n                <p>Adequate - {ratingLevels.movingUp}</p>\n                <p>Getting there - {ratingLevels.goodStart}</p>\n            </div>\n          </Modal>\n\n          <Input word={currWord} onWordSubmit={this.onWordSubmit} />\n          <div className=\"score-container\">\n            <p className=\"score\" >{userScore} {pointLabel} from {foundWords.length} {wordLabel} </p>\n            <div className=\"rating\" onClick={this.openModal}>\n              <span className=\"level\">{level}</span>\n            </div>\n\n          </div>\n          <div className=\"side-by-side\">\n            <div className=\"left-column\">\n              <Hive letters={displayLetters.toUpperCase()} letterClick={this.letterClick}/>\n              <div className=\"controls\">\n                <div className=\"button backspace\" onClick={this.backspace}>Backspace</div>\n                <div className=\"button reorder\" onClick={this.reorder}></div>\n                <div className=\"button enter\" onClick={this.onWordSubmit}>  Enter  </div>\n              </div>\n              { showAnswers &&\n                <div className=\"answers\">\n                  <p>Answers</p>\n                  <ul>{answerList}</ul>\n                </div>\n              }\n              <div className=\"more-controls\">\n                <div className=\"button faq\" onClick={this.openFAQ}>FAQ</div>\n                <div className=\"email\">\n                  <a href=\"mailto:genericwordgame@gmail.com\" rel=\"noopener noreferrer\" target=\"_blank\" >Email Me</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"desktop\">\n              <FoundList words={foundWords} open={true}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n","import React from 'react';\nimport SpellingCee from './SpellingCee.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SpellingCee />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}